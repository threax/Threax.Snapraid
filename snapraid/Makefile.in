# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = snapraid$(EXEEXT)
check_PROGRAMS = mktest$(EXEEXT) mkstream$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(noinst_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_mkstream_OBJECTS = cmdline/mkstream.$(OBJEXT) \
	cmdline/mingw.$(OBJEXT) cmdline/unix.$(OBJEXT) \
	cmdline/support.$(OBJEXT) cmdline/util.$(OBJEXT) \
	cmdline/stream.$(OBJEXT) raid/memory.$(OBJEXT)
mkstream_OBJECTS = $(am_mkstream_OBJECTS)
mkstream_LDADD = $(LDADD)
am_mktest_OBJECTS = cmdline/mktest.$(OBJEXT) cmdline/mingw.$(OBJEXT) \
	cmdline/unix.$(OBJEXT) cmdline/support.$(OBJEXT)
mktest_OBJECTS = $(am_mktest_OBJECTS)
mktest_LDADD = $(LDADD)
am_snapraid_OBJECTS = raid/raid.$(OBJEXT) raid/check.$(OBJEXT) \
	raid/module.$(OBJEXT) raid/tables.$(OBJEXT) raid/int.$(OBJEXT) \
	raid/x86.$(OBJEXT) raid/intz.$(OBJEXT) raid/x86z.$(OBJEXT) \
	raid/helper.$(OBJEXT) raid/memory.$(OBJEXT) \
	raid/test.$(OBJEXT) raid/tag.$(OBJEXT) tommyds/tommy.$(OBJEXT) \
	cmdline/snapraid.$(OBJEXT) cmdline/io.$(OBJEXT) \
	cmdline/util.$(OBJEXT) cmdline/stream.$(OBJEXT) \
	cmdline/support.$(OBJEXT) cmdline/elem.$(OBJEXT) \
	cmdline/state.$(OBJEXT) cmdline/scan.$(OBJEXT) \
	cmdline/sync.$(OBJEXT) cmdline/check.$(OBJEXT) \
	cmdline/dry.$(OBJEXT) cmdline/rehash.$(OBJEXT) \
	cmdline/scrub.$(OBJEXT) cmdline/status.$(OBJEXT) \
	cmdline/dup.$(OBJEXT) cmdline/list.$(OBJEXT) \
	cmdline/pool.$(OBJEXT) cmdline/parity.$(OBJEXT) \
	cmdline/handle.$(OBJEXT) cmdline/touch.$(OBJEXT) \
	cmdline/device.$(OBJEXT) cmdline/fnmatch.$(OBJEXT) \
	cmdline/selftest.$(OBJEXT) cmdline/speed.$(OBJEXT) \
	cmdline/import.$(OBJEXT) cmdline/search.$(OBJEXT) \
	cmdline/mingw.$(OBJEXT) cmdline/unix.$(OBJEXT)
snapraid_OBJECTS = $(am_snapraid_OBJECTS)
snapraid_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp =
am__maybe_remake_depfiles =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(mkstream_SOURCES) $(mktest_SOURCES) $(snapraid_SOURCES)
DIST_SOURCES = $(mkstream_SOURCES) $(mktest_SOURCES) \
	$(snapraid_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man_MANS)
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP) \
	config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in AUTHORS \
	COPYING INSTALL README TODO compile config.guess config.sub \
	install-sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
ADVD2 = @ADVD2@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FAILENV = @FAILENV@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SDE = @SDE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TESTENV = @TESTENV@
TESTENV_AVX2 = @TESTENV_AVX2@
TESTENV_SSE2 = @TESTENV_SSE2@
TESTENV_SSE42 = @TESTENV_SSE42@
TESTENV_SSSE3 = @TESTENV_SSSE3@
VALGRIND = @VALGRIND@
VERSION = @VERSION@
WINE = @WINE@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -DSYSCONFDIR="\"${sysconfdir}\""
snapraid_SOURCES = \
	raid/raid.c \
	raid/check.c \
	raid/module.c \
	raid/tables.c \
	raid/int.c \
	raid/x86.c \
	raid/intz.c \
	raid/x86z.c \
	raid/helper.c \
	raid/memory.c \
	raid/test.c \
	raid/tag.c \
	tommyds/tommy.c \
	cmdline/snapraid.c \
	cmdline/io.c \
	cmdline/util.c \
	cmdline/stream.c \
	cmdline/support.c \
	cmdline/elem.c \
	cmdline/state.c \
	cmdline/scan.c \
	cmdline/sync.c \
	cmdline/check.c \
	cmdline/dry.c \
	cmdline/rehash.c \
	cmdline/scrub.c \
	cmdline/status.c \
	cmdline/dup.c \
	cmdline/list.c \
	cmdline/pool.c \
	cmdline/parity.c \
	cmdline/handle.c \
	cmdline/touch.c \
	cmdline/device.c \
	cmdline/fnmatch.c \
	cmdline/selftest.c \
	cmdline/speed.c \
	cmdline/import.c \
	cmdline/search.c \
	cmdline/mingw.c \
	cmdline/unix.c

noinst_HEADERS = \
	raid/raid.h \
	raid/helper.h \
	raid/internal.h \
	raid/cpu.h \
	raid/gf.h \
	raid/combo.h \
	raid/memory.h \
	raid/test.h \
	tommyds/tommyarray.h \
	tommyds/tommyarrayblkof.h \
	tommyds/tommychain.h \
	tommyds/tommyhash.h \
	tommyds/tommyhashdyn.h \
	tommyds/tommylist.h \
	tommyds/tommytree.h \
	tommyds/tommytypes.h \
	tommyds/tommyarray.c \
	tommyds/tommyarrayblkof.c \
	tommyds/tommyhash.c \
	tommyds/tommyhashdyn.c \
	tommyds/tommylist.c \
	tommyds/tommytree.c \
	cmdline/portable.h \
	cmdline/snapraid.h \
	cmdline/io.h \
	cmdline/util.h \
	cmdline/stream.h \
	cmdline/support.h \
	cmdline/elem.h \
	cmdline/state.h \
	cmdline/parity.h \
	cmdline/handle.h \
	cmdline/murmur3.c \
	cmdline/murmur3test.c \
	cmdline/spooky2.c \
	cmdline/spooky2test.c \
	cmdline/metro.c \
	cmdline/fnmatch.h \
	cmdline/import.h \
	cmdline/search.h \
	cmdline/mingw.h \
	cmdline/unix.h

mktest_SOURCES = \
	cmdline/mktest.c \
	cmdline/mingw.c \
	cmdline/unix.c \
	cmdline/support.c

mkstream_SOURCES = \
	cmdline/mkstream.c \
	cmdline/mingw.c \
	cmdline/unix.c \
	cmdline/support.c \
	cmdline/util.c \
	cmdline/stream.c \
	raid/memory.c

EXTRA_DIST = \
	autogen.sh autover.sh \
	README AUTHORS HISTORY INSTALL COPYING TODO CHECK INSTALL.windows \
	snapraid.d snapraid.1 snapraid.txt \
	test/test-par1.conf \
	test/test-par2.conf \
	test/test-par3.conf \
	test/test-par4.conf \
	test/test-par5.conf \
	test/test-par6.conf \
	test/test-par6-hole.conf \
	test/test-par6-noaccess.conf \
	test/test-par6-rename.conf \
	snapraid.conf.example \
	configure.windows-x86 configure.windows-x64 snapraid.conf.example.windows \
	acinclude.m4 \
	tommyds/LICENSE \
	raid/COPYING \
	raid/test/Makefile \
	raid/test/fulltest.c \
	raid/test/selftest.c \
	raid/test/speedtest.c \
	raid/test/invtest.c

man_MANS = snapraid.1

# Automatic testing

# Common options
# --test-skip-device
# Is required to allow testing in the same disk
#
# --test-skip-self
# It just makes the test a little faster
CHECKFLAGS_COMMON = --test-skip-device --test-skip-self --test-force-progress --no-warnings --test-parity-limit=3333333

# --test-force-order-alpha
# Ensures to process files always in the same order despite
# the inode, physical location, and dir order assigned by the OS.
CHECKFLAGS_ALPHA = $(CHECKFLAGS_COMMON) --test-force-order-alpha

# Physical offset options
CHECKFLAGS_PHYSICAL = $(CHECKFLAGS_COMMON) --test-force-order-physical -q -q -q

# Verbose options
CHECKFLAGS_VERBOSE = $(CHECKFLAGS_ALPHA) -v -G

# Quiet options
CHECKFLAGS = $(CHECKFLAGS_ALPHA) -q -q -q
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_POSIX_FALSE@CHECKCOUNT = 500

# Number of files to create
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_POSIX_TRUE@CHECKCOUNT = 1000
@HAVE_MEMORY_CHECKER_TRUE@CHECKCOUNT = 500

# Size of files to create
@HAVE_MEMORY_CHECKER_FALSE@CHECKSIZE = 4000
@HAVE_MEMORY_CHECKER_TRUE@CHECKSIZE = 100
CONF = $(srcdir)/test/test-par6.conf
HOLE = $(srcdir)/test/test-par6-hole.conf
NOACCESS = $(srcdir)/test/test-par6-noaccess.conf
RENAME = $(srcdir)/test/test-par6-rename.conf
PAR1 = $(srcdir)/test/test-par1.conf
PAR2 = $(srcdir)/test/test-par2.conf
PAR3 = $(srcdir)/test/test-par3.conf
PAR4 = $(srcdir)/test/test-par4.conf
PAR5 = $(srcdir)/test/test-par5.conf
PAR6 = $(srcdir)/test/test-par6.conf
MSG = @echo =====

# Manual testing
MANUAL = ./snapraid --test-skip-device -c test/test-par1.conf sync

# Windows distribution
DISTWIN = \
	snapraid.txt \
	snapraid.exe

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign --ignore-deps'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign --ignore-deps \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
cmdline/$(am__dirstamp):
	@$(MKDIR_P) cmdline
	@: > cmdline/$(am__dirstamp)
cmdline/mkstream.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/mingw.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/unix.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/support.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/util.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/stream.$(OBJEXT): cmdline/$(am__dirstamp)
raid/$(am__dirstamp):
	@$(MKDIR_P) raid
	@: > raid/$(am__dirstamp)
raid/memory.$(OBJEXT): raid/$(am__dirstamp)

mkstream$(EXEEXT): $(mkstream_OBJECTS) $(mkstream_DEPENDENCIES) $(EXTRA_mkstream_DEPENDENCIES) 
	@rm -f mkstream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mkstream_OBJECTS) $(mkstream_LDADD) $(LIBS)
cmdline/mktest.$(OBJEXT): cmdline/$(am__dirstamp)

mktest$(EXEEXT): $(mktest_OBJECTS) $(mktest_DEPENDENCIES) $(EXTRA_mktest_DEPENDENCIES) 
	@rm -f mktest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mktest_OBJECTS) $(mktest_LDADD) $(LIBS)
raid/raid.$(OBJEXT): raid/$(am__dirstamp)
raid/check.$(OBJEXT): raid/$(am__dirstamp)
raid/module.$(OBJEXT): raid/$(am__dirstamp)
raid/tables.$(OBJEXT): raid/$(am__dirstamp)
raid/int.$(OBJEXT): raid/$(am__dirstamp)
raid/x86.$(OBJEXT): raid/$(am__dirstamp)
raid/intz.$(OBJEXT): raid/$(am__dirstamp)
raid/x86z.$(OBJEXT): raid/$(am__dirstamp)
raid/helper.$(OBJEXT): raid/$(am__dirstamp)
raid/test.$(OBJEXT): raid/$(am__dirstamp)
raid/tag.$(OBJEXT): raid/$(am__dirstamp)
tommyds/$(am__dirstamp):
	@$(MKDIR_P) tommyds
	@: > tommyds/$(am__dirstamp)
tommyds/tommy.$(OBJEXT): tommyds/$(am__dirstamp)
cmdline/snapraid.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/io.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/elem.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/state.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/scan.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/sync.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/check.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/dry.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/rehash.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/scrub.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/status.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/dup.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/list.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/pool.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/parity.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/handle.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/touch.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/device.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/fnmatch.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/selftest.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/speed.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/import.$(OBJEXT): cmdline/$(am__dirstamp)
cmdline/search.$(OBJEXT): cmdline/$(am__dirstamp)

snapraid$(EXEEXT): $(snapraid_OBJECTS) $(snapraid_DEPENDENCIES) $(EXTRA_snapraid_DEPENDENCIES) 
	@rm -f snapraid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(snapraid_OBJECTS) $(snapraid_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f cmdline/*.$(OBJEXT)
	-rm -f raid/*.$(OBJEXT)
	-rm -f tommyds/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-man1: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(PROGRAMS) $(MANS) $(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f cmdline/$(am__dirstamp)
	-rm -f raid/$(am__dirstamp)
	-rm -f tommyds/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-local mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-man

uninstall-man: uninstall-man1

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am \
	check-local clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-cscope clean-generic clean-local cscope cscopelist-am \
	ctags ctags-am dist dist-all dist-bzip2 dist-gzip dist-hook \
	dist-lzip dist-shar dist-tarZ dist-xz dist-zip dist-zstd \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-man1 install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic maintainer-clean-local mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-man uninstall-man1

.PRECIOUS: Makefile


# Add the .version file in the distribution
dist-hook:
	$(srcdir)/autover.sh > $(distdir)/.version

clean-local:
	rm -f valgrind.log callgrind.log cachegrind.log
	rm -rf bench
	rm -f test*.log output.log stream*.bin
	rm -f cmdline/*.gcda cmdline/*.gcno cmdline/*.gcov
	rm -f raid/*.gcda raid/*.gcno raid/*.gcov
	rm -f tommyds/*.gcda tommyds/*.gcno tommyds/*.gcov
	rm -f lcov.info
	rm -f gmon.out

maintainer-clean-local:
	rm -f snapraid.1 snapraid.txt

check-local:
	rm -rf bench
	rm -f test.log
	mkdir bench
	mkdir bench/disk1
	mkdir bench/disk2
	mkdir bench/disk3
	mkdir bench/disk4
	mkdir bench/disk5
	mkdir bench/disk6
	mkdir bench/pool
	$(MSG) Stream
	$(TESTENV) ./mkstream$(EXEEXT)
#### THREAD TEST ####
@HAVE_THREAD_CHECKER_TRUE@	$(MSG) Create some files
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./mktest$(EXEEXT) generate 1 6 $(CHECKCOUNT) $(CHECKSIZE)
@HAVE_THREAD_CHECKER_TRUE@	$(MSG) Some commands that use threads
# First sync
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
# Remove, move and add some more
@HAVE_THREAD_CHECKER_TRUE@	rm bench/disk4/a/9*
@HAVE_THREAD_CHECKER_TRUE@	rm bench/disk5/a/9*
@HAVE_THREAD_CHECKER_TRUE@	rm bench/disk6/a/9*
@HAVE_THREAD_CHECKER_TRUE@	mv bench/disk1/a/9* bench/disk4/a
@HAVE_THREAD_CHECKER_TRUE@	mv bench/disk2/a/9* bench/disk5/a
@HAVE_THREAD_CHECKER_TRUE@	mv bench/disk3/a/9* bench/disk6/a
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./mktest$(EXEEXT) change 2 500 bench/disk2/b/* bench/disk3/b/*
# Sync again
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
# Other commands that uses threads
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) test-rewrite
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) scrub -p full
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) scrub -p full --test-io-cache 3
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) scrub -p full --test-io-cache 128
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync -F --test-io-cache 1
@HAVE_THREAD_CHECKER_TRUE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) scrub -p full --test-io-cache 1
#### COMMAND LINE ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Pre test
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) --test-skip-device -H
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) --test-skip-device -V
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) test
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT)
@HAVE_EMULATOR_TRUE@@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Speed
# Run the self test in AVX2
@HAVE_EMULATOR_TRUE@@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV_AVX2) ./snapraid$(EXEEXT) --test-skip-device -c $(CONF) status
# Run the speed test in different architectures
@HAVE_EMULATOR_TRUE@@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV_SSE2) ./snapraid$(EXEEXT) --test-skip-device -T
@HAVE_EMULATOR_TRUE@@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV_SSSE3) ./snapraid$(EXEEXT) --test-skip-device -T
@HAVE_EMULATOR_TRUE@@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV_SSE42) ./snapraid$(EXEEXT) --test-skip-device -T
@HAVE_EMULATOR_TRUE@@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV_AVX2) ./snapraid$(EXEEXT) --test-skip-device -T
# Run the self test natively
@HAVE_EMULATOR_FALSE@@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) --test-skip-device -c $(CONF) status
# Run the speed test natively
@HAVE_EMULATOR_FALSE@@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) --test-skip-device -T
#### EMPTY ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Some commands with empty array
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) diff
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) dup
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) list > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status -l ">&1"
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status -l ">&2"
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status -l ">>test.log"
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status -l test-%D-%T.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) up
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) down -d parity -d disk1
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) devices
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) smart --no-warnings
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) smart --test-fake-device --test-expect-failure
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) pool
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -a check
#### CONTROLLED ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Filesystem allocation test
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/TEST
# Copy the file to trigger the copy optimization check
@HAVE_THREAD_CHECKER_FALSE@	cp -a bench/disk1/TEST bench/disk2/TEST
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
# Now delete the file, and do a partial sync to force a deallocation in the middle of a file
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/TEST
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -E -S 1 -B 1 sync
# Now force a deallocation at the end
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -E -S 7 -B 1 sync
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk2/TEST
# Have the sync to fail for empty disk
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync --test-expect-failure
# Now sync will complete with -E
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -E sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Filesystem fragmentation test
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/TEST1
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/TEST2
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/TEST3
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/TEST4
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/TEST5
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/TEST6
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
# Now delete some files, and create a bigger one to fill the holes
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/TEST1
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/TEST3
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/TEST5
@HAVE_THREAD_CHECKER_FALSE@	head -c 65536 /dev/zero > bench/disk1/TESTX
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync -l ">&1"
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/TEST*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -E sync
# Now enforce copy detection of a file without parity
# Create a file in a high number disk
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/urandom > bench/disk6/STEP1
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
# Create two new copies. The one in disk1 will copy
# the hash from the one in disk6, and the one in disk2
# will copy the hash from the one in disk1, that
# doesn't have parity
@HAVE_THREAD_CHECKER_FALSE@	cp -a bench/disk6/STEP1 bench/disk1/STEP1
@HAVE_THREAD_CHECKER_FALSE@	cp -a bench/disk6/STEP1 bench/disk2/STEP1
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
# Now create, duplicate, move and partial sync
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/INVA1
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/INVA2
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/INVA3
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/MOVE1
@HAVE_THREAD_CHECKER_FALSE@	cp -a bench/disk1/MOVE1 bench/disk1/MOVE2
@HAVE_THREAD_CHECKER_FALSE@	cp -a bench/disk1/MOVE1 bench/disk1/MOVE3
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/MOVE2 bench/disk2/MOVE2
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/MOVE3 bench/disk3/MOVE3
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk4/MOVE4
@HAVE_THREAD_CHECKER_FALSE@	cp -a bench/disk1/INVA1 bench/disk1/EXTRA1
@HAVE_THREAD_CHECKER_FALSE@	cp -a bench/disk1/INVA2 bench/disk1/EXTRA2
@HAVE_THREAD_CHECKER_FALSE@	cp -a bench/disk1/INVA3 bench/disk1/EXTRA3
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/INVA1
@HAVE_THREAD_CHECKER_FALSE@	touch bench/disk1/INVA2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-kill-after-sync sync
# Diff should report the need of a sync for invalid parity
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(PAR1) --test-expect-need-sync diff
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk2/MOVE2 bench/disk4/MOVE4
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk3/MOVE3 bench/disk5/MOVE5
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk4/MOVE4 bench/disk6/MOVE6
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/EXTRA1
@HAVE_THREAD_CHECKER_FALSE@	touch bench/disk1/EXTRA2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -E sync
# Change UUID
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-fake-uuid sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### NOT EMPTY ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Create some files
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) generate 1 6 $(CHECKCOUNT) $(CHECKSIZE)
@HAVE_THREAD_CHECKER_FALSE@	echo DUP > bench/disk1/DUP1
@HAVE_THREAD_CHECKER_FALSE@	echo DUP > bench/disk1/DUP2
@HAVE_THREAD_CHECKER_FALSE@	echo -n > bench/disk1/ZERO
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Some commands with a not empty array
# Run a sync using physical offset
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_PHYSICAL) -c $(CONF) --test-expect-need-sync diff > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_PHYSICAL) -c $(CONF) sync
# Now reset the array, as we normally test with alpha order and murmur3
@HAVE_THREAD_CHECKER_FALSE@	rm bench/content bench/?-content
# Now rebuild the array with alpha order and murmur3 and do some commands
# Later we will convert it to spooky2 to test both hashes
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) --test-expect-need-sync diff > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-force-murmur3 --test-force-autosave-at 100 sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) dup -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) list -l test.log > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) test-rewrite
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) test-read
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status -l test.log
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) pool
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) check
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -a check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Dry
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) test-dry
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Copy detection
# Create a file and sync with it
@HAVE_THREAD_CHECKER_FALSE@	echo 123 > bench/disk1/COPY
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
# Corrupt and move it to another disk
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) damage 1 1 1 bench/disk1/COPY
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/COPY bench/disk2/COPY
# Now sync with failure as the data won't match. We have two points of failure, pre-hash and sync
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-expect-failure -h sync
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-expect-failure sync
# Now sync with force-nocopy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --force-nocopy sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Nano
@HAVE_THREAD_CHECKER_FALSE@	touch -t 200102011234.56 bench/disk1/a/a*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) touch
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Check the --gen-conf command
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --gen-conf bench/content
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Filter
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) -d disk1 check > output.log
# Only in real unix, as with MingW the * trigger path replacement
# Like /b/a* -> B:/a* and SnapRAID then complain about relative paths
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) -f \\*a -f a/ -f /b/a\\* check > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) --test-expect-failure -f . check > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) --test-expect-failure -f ./ check > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) --test-expect-failure -f a/a check > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete some files and sync
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk4/a/9*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk5/a/9*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk6/a/9*
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) --test-expect-need-sync diff > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) sync -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Move some files, sync and check
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/a/9* bench/disk4/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk2/a/9* bench/disk5/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk3/a/9* bench/disk6/a
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(CONF) --test-expect-need-sync diff > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
#### MORE FILES ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Create some more files, hardlinks and empty directories, delete others, sync PAR1 and check
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk4/a/8*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk5/a/8*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk6/a/8*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) generate 2 6 $(CHECKCOUNT) $(CHECKSIZE)
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1/empty1
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2/empty2
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk3/empty3a
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk3/empty3a/emptyinner
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk3/empty3b
@HAVE_THREAD_CHECKER_FALSE@	echo TARGET1 > bench/disk1/target1
@HAVE_THREAD_CHECKER_FALSE@	ln bench/disk1/target1 bench/disk1/file_hardlink1
@HAVE_THREAD_CHECKER_FALSE@	ln bench/disk1/target1 bench/disk1/file_hardlink2
@HAVE_THREAD_CHECKER_FALSE@	ln bench/disk1/target1 bench/disk1/file_hardlink3
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	ln -s bench/disk1/target1 bench/disk1/file_symlink1
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	ln -s bench/disk1/target1 bench/disk1/file_symlink2
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	ln -s bench/disk1/target1 bench/disk1/file_symlink3
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(PAR1) --test-expect-need-sync diff > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-skip-fallocate -c $(PAR1) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-io-advise-none -c $(PAR1) sync -F --test-io-cache 1
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-io-advise-sequential -c $(PAR1) sync -F --test-io-stats
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-io-advise-flush-window -c $(PAR1) sync -F
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-io-advise-discard-window -c $(PAR1) sync -F
#### CHANGE LINKS ####
# Use a different size ("22" instead of "1") to ensure to recognize the file different
# even if it gets the same timestamp in case subsecond timestamp is no available
@HAVE_THREAD_CHECKER_FALSE@	echo TARGET22 > bench/disk1/target2
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/file_hardlink1
@HAVE_THREAD_CHECKER_FALSE@	ln bench/disk1/target2 bench/disk1/file_hardlink1
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/file_symlink1
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	ln -s bench/disk1/target2 bench/disk1/file_symlink1
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) --test-expect-need-sync diff > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) sync -l ">&1"
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) check -l ">&1"
#### MISC COMMANDS ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Some commands with a not empty array
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(PAR1) dup
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(PAR1) list --test-fmt file > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(PAR1) list --test-fmt disk > output.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) -c $(PAR1) list --test-fmt path > output.log
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) pool
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Extend PAR1 to max parity with fix and check
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(CONF) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) fix -d 2-parity -d 3-parity -d 4-parity -d 5-parity -d 6-parity -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check -l ">&1"
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Fix with unaccessible parity and disk
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(NOACCESS) fix --test-expect-failure
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(NOACCESS) fix --force-device --test-expect-recoverable -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Rename a disk
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(RENAME) --test-match-first-uuid sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-match-first-uuid sync
#### SCRUB ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Scrub some times
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-force-scrub-at 100 scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-force-scrub-at 1000 scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-force-scrub-at 100000 scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
#### SYNC WITH RUNTIME CHANGE ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Modify files during a sync
@HAVE_THREAD_CHECKER_FALSE@	echo RUN > bench/disk1/RUN-RM
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "rm bench/disk1/RUN-RM" --test-expect-failure sync
@HAVE_THREAD_CHECKER_FALSE@	echo RUN > bench/disk1/RUN-CHMOD
# Doesn't run this test as root because the root user override permissions
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	if [[ $$EUID -ne 0 ]]; then \
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@		$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "chmod a-r bench/disk1/RUN-CHMOD" --test-expect-failure sync; \
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	fi
@HAVE_THREAD_CHECKER_FALSE@	echo RUN > bench/disk1/RUN-SIZE
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "echo RUNRUN > bench/disk1/RUN-SIZE" --test-expect-failure sync
@HAVE_THREAD_CHECKER_FALSE@	echo RUN > bench/disk1/RUN-TOUCH
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "touch -t 200001011200 bench/disk1/RUN-TOUCH" --test-expect-failure sync
@HAVE_THREAD_CHECKER_FALSE@	echo RUN > bench/disk1/RUN-INODE
@HAVE_THREAD_CHECKER_FALSE@	cp -p bench/disk1/RUN-INODE bench/disk1/RUN-INODE-COPY
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "mv bench/disk1/RUN-INODE-COPY bench/disk1/RUN-INODE" --test-expect-failure sync
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/RUN-CHMOD
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/RUN-SIZE
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/RUN-TOUCH
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/RUN-INODE
@HAVE_THREAD_CHECKER_FALSE@	echo HASH > bench/disk1/HASH-RM
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "rm bench/disk1/HASH-RM" --test-expect-failure -h sync
@HAVE_THREAD_CHECKER_FALSE@	echo HASH > bench/disk1/HASH-CHMOD
# Doesn't run this test as root because the root user override permissions
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	if [[ $$EUID -ne 0 ]]; then \
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@		$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "chmod a-r bench/disk1/HASH-CHMOD" --test-expect-failure -h sync; \
@HAVE_POSIX_TRUE@@HAVE_THREAD_CHECKER_FALSE@	fi
@HAVE_THREAD_CHECKER_FALSE@	echo HASH > bench/disk1/HASH-SIZE
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "echo HASHHASH > bench/disk1/HASH-SIZE" --test-expect-failure -h sync
@HAVE_THREAD_CHECKER_FALSE@	echo HASH > bench/disk1/HASH-TOUCH
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "touch -t 200001011200 bench/disk1/HASH-TOUCH" --test-expect-failure -h sync
@HAVE_THREAD_CHECKER_FALSE@	echo HASH > bench/disk1/HASH-INODE
@HAVE_THREAD_CHECKER_FALSE@	cp -p bench/disk1/HASH-INODE bench/disk1/HASH-INODE-COPY
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-run "mv bench/disk1/HASH-INODE-COPY bench/disk1/HASH-INODE" --test-expect-failure -h sync
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/HASH-CHMOD
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/HASH-SIZE
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/HASH-TOUCH
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/HASH-INODE
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### SILENT ERRORS ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Silently corrupt some files, scrub and fix filtering for error. Test scrub patterns.
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) damage 1 1 1 bench/disk1/a/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-expect-recoverable --test-force-scrub-at 100000 scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) fix -e
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --percentage bad scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --plan 1 scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -o 0 scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -p full scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -p new scrub
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Silently corrupt some files, and sync with error presents
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) write 2 1 1 bench/disk1/a/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) damage 3 1 1 bench/disk2/a/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-expect-recoverable sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
# Note that this fix -e command doesn't fix all the errors because
# only the blocks touched by the sync are marked bad
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) fix -e
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check --test-expect-recoverable
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) fix
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -p full scrub
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Full sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -F sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Realloc sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -R sync
#### SYNC PARTIAL ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync with additions. Delete some of them, and add others and sync again.
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) This triggers files reallocation inside parity
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1/c
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1/d
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1/e
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk2/a/c* bench/disk1/c
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk2/a/d* bench/disk1/d
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-kill-after-sync sync
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/c
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk2/a/e* bench/disk1/e
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync with both deletions and additions. And delete and add some more and sync again.
# Note that here we are depending of the previous state leaving dirs "d" and "e"
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1/f
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk3/a/f* bench/disk1/f
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/d
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-kill-after-sync sync
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1/g
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk4/a/g* bench/disk1/g
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/e
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/f
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/g
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Make a hole in the disk array and sync with --force-empty
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk2 bench/disk2.old
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --force-empty sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Use with the hole
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(HOLE) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(HOLE) check
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3/a
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(HOLE) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(HOLE) check
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(HOLE) test-dry
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Fill the hole with a new disk
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk2.old bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Corrupt the content file
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) write 1 100 100 bench/content
@HAVE_THREAD_CHECKER_FALSE@	$(FAILENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-failure -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	rm bench/content
#### AGAIN MORE FILES ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete some files, create some new, sync and check
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/a/1*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk2/a/2*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk3/a/3*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk4/a/4*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) generate 3 6 $(CHECKCOUNT) $(CHECKSIZE)
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Move some files, sync and check
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/a/7* bench/disk1/b/
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk2/a/7* bench/disk2/b/
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk3/a/7* bench/disk3/b/
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk4/a/7* bench/disk4/b/
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
#### RECOVER 1 ####
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete one disk, fix and check with PAR1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR1) check -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) fix -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### RECOVER 2 ####
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete two disks, fix and check with PAR2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR1) fix -l test-fail-strategy1.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR2) check -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### RECOVER 3 ####
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete three disks, fix and check with PAR3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR2) fix -l test-fail-strategy2.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR3) check -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR3) fix -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### RECOVER 4 ####
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete four disks, fix and check with PAR4
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk4
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk4
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk5
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk5
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk6
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk6
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR3) fix -l test-fail-strategy3.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR4) check -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR4) fix -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### RECOVER 5 ####
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete five disks, fix and check with PAR5
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk5
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk5
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk6
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk6
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR4) fix -l test-fail-strategy4.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR5) check -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR5) fix -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### RECOVER 6 ####
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete six disks, fix and check with PAR6
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk1
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk3
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk4
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk4
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk5
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk5
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk6
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk6
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR5) fix -l test-fail-strategy5.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR6) check -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR6) fix -l test.log
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_MEMORY_CHECKER_FALSE@@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### MULTI STEP ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete some files and create some new, sync and check in multiple steps
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/a/4*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk2/a/5*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk3/a/6*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk4/a/6*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -B 10 sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) generate 4 6 $(CHECKCOUNT) $(CHECKSIZE)
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -B 100 sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -B 1000 sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Rehash to spooky2 and rehash even blocks
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-force-spooky2 rehash
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-force-scrub-even scrub
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) status
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Full sync to complete rehash
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -F sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete files from three disks and check/fix with import by data in PAR2
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk3/a bench/a
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-import-content bench/a -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/a
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete files from three disks and check/fix with import by timestamp in PAR2
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk3/a bench/a
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -i bench/a -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/a
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete files from three disks and check/fix with automatic import in PAR2
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk3/a bench/disk1/a_from_disk3
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_from_disk3
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
#### SYNC ABORT ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync late with additions, delete them and recover with PAR2
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) This triggers the recovering with q using p to check the validity
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk1/a bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-kill-after-sync -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync early with additions, delete them and recover with PAR2
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) This triggers the recovering with q using p to check the validity, but failing for new blocks being filled with zero
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk1/a bench/disk1/a_copy
# Ensure that there is at least one zero filled file
@HAVE_THREAD_CHECKER_FALSE@	head -c 8192 /dev/zero > bench/disk1/a_copy/ZERO_FILLED
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -B 1 --test-kill-after-sync -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR2) fix -l test-fail-earlysyncadd.log
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync late with additions with prehash and then delete the new additions and sync again
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk1/a bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk2/a bench/disk2/a_copy
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk3/a bench/disk3/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-kill-after-sync -c $(CONF) -h sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2/a_copy
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync late with additions and then delete the new additions and sync again
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk1/a bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk2/a bench/disk2/a_copy
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk3/a bench/disk3/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-kill-after-sync -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2/a_copy
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3/a_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync late with additions and then delete some unchanged stuff and fix with PAR1
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk1/b bench/disk1/b_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) --test-kill-after-sync sync
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Fixes again to restore all the parity
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/b_copy
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync late with more deletions than additions and then delete some unchanged stuff and fix with PAR1
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk1/a bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/a bench/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/b bench/b
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) --test-kill-after-sync sync
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Fixes again to restore all the parity
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	-rm -r bench/disk1/a
@HAVE_THREAD_CHECKER_FALSE@	-rm -r bench/disk1/b
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	mv bench/a bench/disk1/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/b bench/disk1/b
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Abort sync early with more deletions than additions and then delete some unchanged stuff and fix with PAR2
@HAVE_THREAD_CHECKER_FALSE@	cp -pR bench/disk1/a bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/a bench/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/disk1/b bench/b
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -B 1 --test-kill-after-sync sync
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	mkdir bench/disk2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR1) fix -l test-fail-earlysyncdel.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	-rm -r bench/disk1/a
@HAVE_THREAD_CHECKER_FALSE@	-rm -r bench/disk1/b
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/a_copy
@HAVE_THREAD_CHECKER_FALSE@	mv bench/a bench/disk1/a
@HAVE_THREAD_CHECKER_FALSE@	mv bench/b bench/disk1/b
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
#### RECOVER MISSING ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete some files, fix with -m and check with PAR1
@HAVE_THREAD_CHECKER_FALSE@	rm bench/disk1/a/8*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR1) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) -m fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete some dirs in six disk, fix with -m and check
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk1/b
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2/b
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3/b
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk4/b
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk5/b
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk6/b
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR5) fix -l test-full5.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(CONF) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -m fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
#### RECOVER BY DISK ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete some dirs in two disks, fix and check with PAR2 using the -d option for each disk
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2/b
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk5/b
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR1) check -l test-full1.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) -d disk2 fix -l test-part1.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) -d disk5 fix -l test-part2.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
#### RECOVER PARITY ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete the parity, fix and check with PAR1
@HAVE_THREAD_CHECKER_FALSE@	rm bench/parity*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete the parity and the 2-parity, fix and check with PAR2
@HAVE_THREAD_CHECKER_FALSE@	rm bench/parity*
@HAVE_THREAD_CHECKER_FALSE@	rm bench/2-parity*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete the parity and a disk, fix and check with PAR2
@HAVE_THREAD_CHECKER_FALSE@	rm bench/parity*
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk2/b
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Delete the 2-parity and a disk, fix and check with PAR2
@HAVE_THREAD_CHECKER_FALSE@	rm bench/2-parity*
@HAVE_THREAD_CHECKER_FALSE@	rm -r bench/disk3/a
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Corrupt the parity, fix and check with PAR1
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) write 1 100 10000 bench/parity*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR1) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) -a check
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Corrupt the parity and the 2-parity, fix and check with PAR2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) write 2 100 10000 bench/parity*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) write 2 100 10000 bench/2-parity*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR2) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) -a check
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
#### RECOVER FILES AND PARITY ####
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Corrupt some files, fix and check with PAR1
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) change 3 500 bench/disk2/b/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR1) -a check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR1) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR1) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Corrupt some files, fix and check with PAR2 in verbose mode
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) change 4 500 bench/disk2/b/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) change 4 500 bench/disk3/b/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) --test-expect-unrecoverable -c $(PAR1) check -l test.log > /dev/null
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS_VERBOSE) --test-expect-unrecoverable -c $(PAR1) fix -l test-fail-corrupt-verbose.log > /dev/null
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR2) -a check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR2) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Corrupt some files, fix and check with PAR2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) change 5 500 bench/disk2/b/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) change 5 500 bench/disk3/b/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR1) check -l test-fail-corrupt-data.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR2) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Corrupt the parity and some files, fix and check with PAR2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) write 6 100 10000 bench/parity*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) change 6 500 bench/disk1/a/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-unrecoverable -c $(PAR1) check -l test-fail-corrupt-parity.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR2) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Corrupt the 2-parity and some files, fix and check with PAR2
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) write 7 100 10000 bench/2-parity*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./mktest$(EXEEXT) change 7 500 bench/disk1/a/*
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR1) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) --test-expect-recoverable -c $(PAR2) check -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(PAR2) fix -l test.log
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
@HAVE_THREAD_CHECKER_FALSE@	$(MSG) Sync after all the fixes
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) sync
@HAVE_THREAD_CHECKER_FALSE@	$(TESTENV) ./snapraid$(EXEEXT) $(CHECKFLAGS) -c $(CONF) check
	$(MSG) Regression test completed with SUCCESS!
	$(MSG) Please ignore any error message printed above, they are expected!
	$(MSG) Everything OK

valgrind:
	valgrind \
		--tool=memcheck \
		--track-origins=yes \
		--read-var-info=yes \
		--leak-check=full \
		-v $(MANUAL) \
		2> valgrind.log
		tail valgrind.log

callgrind:
	valgrind \
		--tool=callgrind \
		--dump-instr=yes \
		--trace-jump=yes \
		--collect-systime=yes \
		-v $(MANUAL) \
		2> callgrind.log
		tail callgrind.log

cachegrind:
	valgrind \
		--tool=cachegrind \
		-v $(MANUAL) \
		2> cachegrind.log
		tail cachegrind.log

lcov_reset:
	lcov --directory . -z
	rm -f ./lcov.info

lcov_capture:
	lcov --directory . --capture -o lcov.info

lcov_html:
	rm -rf ./cov
	mkdir cov
	genhtml -o ./cov lcov.info

# Rules for documentation

@HAVE_ADVD2_TRUE@snapraid.1 : snapraid.d
@HAVE_ADVD2_TRUE@	advd2 man < $(srcdir)/$< > $@

@HAVE_ADVD2_TRUE@snapraid.txt : snapraid.d
@HAVE_ADVD2_TRUE@	advd2 txt < $(srcdir)/$< | todos > $@

@HAVE_ADVD2_TRUE@snapraid.html : snapraid.d
@HAVE_ADVD2_TRUE@	advd2 html < $(srcdir)/$< > $@

@HAVE_ADVD2_TRUE@snapraid.hh : snapraid.d
@HAVE_ADVD2_TRUE@	advd2 frame < $(srcdir)/$< > $@

distwindows-x86: $(DISTWIN)
	rm -f $(PACKAGE)-$(VERSION)-windows-x86.zip
	mkdir tmp
	cp $(DISTWIN) tmp
	cp support/smartctl.exe tmp/smartctl.exe
	todos < snapraid.conf.example.windows > tmp/snapraid.conf.example
	todos < INSTALL.windows > tmp/install.txt
	todos < README > tmp/readme.txt
	todos < AUTHORS > tmp/authors.txt
	todos < HISTORY > tmp/history.txt
	todos < COPYING > tmp/copying.txt
	todos < TODO > tmp/todo.txt
	cd tmp && zip -r ../$(PACKAGE)-$(VERSION)-windows-x86.zip *
	rm -r tmp

distwindows-x64: $(DISTWIN)
	rm -f $(PACKAGE)-$(VERSION)-windows-x64.zip
	mkdir tmp
	cp $(DISTWIN) tmp
	cp support/smartctl.exe tmp/smartctl.exe
	todos < snapraid.conf.example.windows > tmp/snapraid.conf.example
	todos < INSTALL.windows > tmp/install.txt
	todos < README > tmp/readme.txt
	todos < AUTHORS > tmp/authors.txt
	todos < HISTORY > tmp/history.txt
	todos < COPYING > tmp/copying.txt
	todos < TODO > tmp/todo.txt
	cd tmp && zip -r ../$(PACKAGE)-$(VERSION)-windows-x64.zip *
	rm -r tmp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
